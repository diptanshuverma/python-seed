[project]
name = "run-forrest-run"
version = "0.0.0"
description = "Monorepo for FastAPI applications"
authors = [{ name = "GO", email = "GO@test.com" }]
readme = "README.md"

requires-python = ">=3.12.4"
dependencies = [
    "duckdb>=1.2.2",
    "joblib>=1.5.0",
    "pandas>=2.2.3",
    "pyarrow>=20.0.0",
    "pyiceberg>=0.9.0",
    "scikit-learn>=1.6.1",
]

[dependency-groups]
dev = [
    "bandit>=1.8.0",
    "commitizen>=4.1.0",
    "commitlint>=1.3.0",
    "mypy>=1.14.0",
    "poethepoet>=0.32.0",
    "pre-commit>=4.0.1",
    "pydantic>=2.10.4",  # required by pydantic.mypy plugin
    "pylint>=3.3.3",
    "pytest>=8.3.4",
    "ruff>=0.8.4",
]

[tool.uv]
package = false
allow-insecure-host = ["localhost", "pypi.org", "pypi.python.org", "files.pythonhosted.org", "github.com"]

[tool.uv.workspace]
members = ["libs/*", "apps/*"]

[tool.poe.tasks]
# Run lint tools - ruff, bandit, mypy and pylint
lint = [
    { cmd = "ruff check --fix" },
    # only scanning "apps/" and "libs/" folders, exclude .venv:
    { cmd = "bandit -r apps libs -x .venv" },
    #{ cmd = "bandit -r . --exclude ./venv,./scripts" },
    #{ cmd = "pylint . --ignore-paths ./venv" },
    { cmd = "pylint . --ignore=.venv" },
    { cmd = "mypy ." }
]

# Organize imports with Ruff and format the code
format = [{ cmd = "ruff check --select I --fix" }, { cmd = "ruff format" }]
