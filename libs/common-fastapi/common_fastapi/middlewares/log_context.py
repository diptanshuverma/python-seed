from collections.abc import Awaitable, Callable

from asgi_correlation_id.context import correlation_id
from starlette.middleware.base import BaseHTTPMiddleware
from starlette.requests import Request
from starlette.responses import Response

from common_fastapi.config import add_to_log_context, clear_log_context


class LogContextMiddleware(BaseHTTPMiddleware):
    """
    Middleware for managing logging context and correlation IDs for every HTTP request.

    This middleware clears the existing log context at the beginning of request processing,
    sets up a correlation ID in the log context, and maintains the log context until
    after the request has been processed.
    """

    async def dispatch(self, request: Request, call_next: Callable[[Request], Awaitable[Response]]) -> Response:
        """
        Sets up correlation ID in the logging context and processes the request.

        This method performs the following actions:
        1. Clears the existing log context.
        2. Retrieves and sets the correlation ID in the log context.
        3. Passes the request to the next middleware or endpoint in the processing chain.
        4. Returns the response generated by the subsequent middleware or endpoint.

        Args:
        ----
        request (Request): The incoming HTTP request to process.
        call_next (Callable): A function that processes the request and returns a response.

        Returns:
        -------
        Response: The HTTP response resulting from processing the request.

        """
        # https://www.structlog.org/en/stable/contextvars.html
        clear_log_context()
        req_id = correlation_id.get()
        add_to_log_context(key="req_id", value=req_id)

        response = await call_next(request)
        return response
